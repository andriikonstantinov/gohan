__gohan()
{


    declare -A possibleWord=( ["1"]="gohan"
    ["2"]="--debug --help --version -d -h -v"
    ["3"]="client validate v init-db idb convert conv server srv test_extensions test_ex migrate mig template run test test openapi markdown dot glace-server gsrv help h")

    declare -A commandOptions=( ["validate"]="--schema -s --json -i"
        ["template"]="--config-file --split-by-resource-group --policy --template -t"
        ["openapi"]="--config-file --template -t --split-by-resource-group --policy --version --title --description"
        ["markdown"]="--config-file --template -t --split-by-resource-group --policy"
)
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    globalOptions="--debug --help --version -d -h -v"
    commands="client validate v init-db idb convert conv server srv test_extensions test_ex migrate mig template run test test openapi markdown dot glace-server gsrv help h"
    if [[ "${COMP_CWORD}" == 1 ]] && [[ "${cur}" == "-"* ]]; then
    curOption=2
    COMPREPLY=( $(compgen -W "${possibleWord[$curOption]}" -- ${cur}) )
    return 0
    elif [[ "${COMP_CWORD}" == 1 ]] && [[ "${cur}" != "-"* ]]; then
    curOption=3
    COMPREPLY=( $(compgen -W "${possibleWord[$curOption]}" -- ${cur}) )
    return 0
    elif [[ "${COMP_CWORD}" == 2 ]] && [[ "${prev}" == "-"* ]]; then
    curOption=3
    COMPREPLY=( $(compgen -W "${possibleWord[$curOption]}" -- ${cur}) )
    return 0
    elif [[ "${COMP_CWORD}" == 2 ]]  && [[ "${prev}" != "-"* ]]; then
    COMPREPLY=( $(compgen -W "${commandOptions[${prev}]}" -- ${cur}) )
    return 0
    elif [[ "${COMP_CWORD}" == 3 ]] && [[ "${prev}" != "-"* ]]; then
    COMPREPLY=( $(compgen -W "${commandOptions[${prev}]}" -- ${cur}) )
    return 0
    fi
}
complete -F __gohan gohan

